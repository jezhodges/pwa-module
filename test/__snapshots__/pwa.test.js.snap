// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pwa build files (.nuxt) 1`] = `
Array [
  "fixture/.nuxt/components",
  "fixture/.nuxt/components/nuxt-error.vue",
  "fixture/.nuxt/components/nuxt-loading.vue",
  "fixture/.nuxt/dist",
  "fixture/.nuxt/dist/client",
  "fixture/.nuxt/dist/client/LICENSES",
  "fixture/.nuxt/dist/client/icons",
  "fixture/.nuxt/dist/client/icons/icon_120.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/client/icons/icon_144.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/client/icons/icon_152.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/client/icons/icon_192.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/client/icons/icon_384.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/client/icons/icon_512.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/client/icons/icon_64.9mgd2ZDMcQu.png",
  "fixture/.nuxt/dist/server",
  "fixture/.nuxt/dist/server/index.spa.html",
  "fixture/.nuxt/dist/server/index.ssr.html",
  "fixture/.nuxt/layouts",
  "fixture/.nuxt/layouts/default.vue",
  "fixture/.nuxt/loading.html",
  "fixture/.nuxt/views",
  "fixture/.nuxt/views/app.template.html",
  "fixture/.nuxt/views/error.html",
]
`;

exports[`pwa generate files (dist) 1`] = `
Array [
  "fixture/dist/.gitkeep",
  "fixture/dist/.nojekyll",
  "fixture/dist/200.html",
  "fixture/dist/_nuxt",
  "fixture/dist/_nuxt/LICENSES",
  "fixture/dist/_nuxt/icons",
  "fixture/dist/_nuxt/icons/icon_120.9mgd2ZDMcQu.png",
  "fixture/dist/_nuxt/icons/icon_144.9mgd2ZDMcQu.png",
  "fixture/dist/_nuxt/icons/icon_152.9mgd2ZDMcQu.png",
  "fixture/dist/_nuxt/icons/icon_192.9mgd2ZDMcQu.png",
  "fixture/dist/_nuxt/icons/icon_384.9mgd2ZDMcQu.png",
  "fixture/dist/_nuxt/icons/icon_512.9mgd2ZDMcQu.png",
  "fixture/dist/_nuxt/icons/icon_64.9mgd2ZDMcQu.png",
  "fixture/dist/icon.png",
  "fixture/dist/icons",
  "fixture/dist/icons/index.html",
  "fixture/dist/index.html",
  "fixture/dist/offline.html",
  "fixture/dist/offline.png",
]
`;

exports[`pwa sw.js 1`] = `
"importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@4.0.0-0/workbox/workbox-sw.js', 'custom-sw.js')

// --------------------------------------------------
// Configure
// --------------------------------------------------

// Set workbox config
workbox.setConfig({
  \\"debug\\": true
})

// Set workbox cache names
workbox.core.setCacheNameDetails({
  \\"prefix\\": \\"test\\",
  \\"googleAnalytics\\": \\"test-ga\\"
})

// Start controlling any existing clients as soon as it activates
workbox.core.clientsClaim()

// Skip over the SW waiting lifecycle stage
workbox.core.skipWaiting()

workbox.precaching.cleanupOutdatedCaches()

// Enable offline Google Analytics tracking
workbox.googleAnalytics.initialize()

// -- Start of workboxExtensions --
// Workbox Extension
// -- End of workboxExtensions --

// --------------------------------------------------
// Precaches
// --------------------------------------------------

// Precache assets

workbox.precaching.precacheAndRoute([
  \\"/offline.html\\",
  \\"/offline.png\\",
  \\"precache.js\\"
], {
  \\"cacheId\\": \\"nuxt\\",
  \\"directoryIndex\\": \\"/\\"
})

// -- Start of cachingExtensions --
// Caching Extension
// -- End of cachingExtensions --

// --------------------------------------------------
// Runtime Caching
// --------------------------------------------------

// Register route handlers for runtimeCaching
workbox.routing.registerRoute(new RegExp('https://google.com/.*'), new workbox.strategies.CacheFirst ({}), 'GET')
workbox.routing.registerRoute(new RegExp('/_nuxt/(?!.*(__webpack_hmr|hot-update))'), new workbox.strategies.CacheFirst ({}), 'GET')

// Register router handler for offlinePage
workbox.routing.registerRoute(new RegExp('/(?!.*(__webpack_hmr|hot-update))'), ({event}) => {
  return new workbox.strategies.NetworkOnly().handle({event})
    .catch(() => caches.match('/offline.html'))
})

// -- Start of routingExtensions --
// Routing Extension
// -- End of routingExtensions --
"
`;
